# NOTE: YAML files do not allow tabs. use 2 or 4 spaces for indentation
#
# Reserved TCP/IP port by RealSim: 1337, 1338
# DO NOT use these port when setup clients to RealSim
#
# by minimum, RealSim will run with VISSIM or SUMO. (optional, we can run with IPG, Carla, simulink)
#
# TCP/IP connection port config
#               1337/1338                 ApplicationPort                                   XilPort
#   VISSIM/SUMO ---------> Traffic Layer -----------------> Application Layer (controller) -----------> XIL Clients (simulink models, XIL hardware)


# Global Simulation setup
SimulationSetup:
    
    # Master Switch to turn on/off RealSim interface
    # if turned off, VISSIM will just run without RealSim
    # SUMO needs to run without traci
    EnableRealSim: true
    
    # Whether or not to save verbose log during the simulation. skip log can potentially speed up
    EnableVerboseLog: false
    
    # specify which traffic simulator
    # VISSIM or SUMO
    # default SUMO
    #--------------------------------------------------
    #SelectedTrafficSimulator: 'VISSIM'
    SelectedTrafficSimulator: 'SUMO'

    # default will send all
    VehicleMessageField: [id, type, vehicleClass, speed, acceleration, positionX, positionY, positionZ, color, linkId, laneId, distanceTravel, speedDesired, heading, grade]


# setup Application Layer
ApplicationSetup:
    # turn on/off application layer
    EnableApplicationLayer: false
    
    #--------------------------------------------------
    VehicleSubscription: 

# subscription in XilSetup must be subset of ApplicationSetup
XilSetup:
    # enable/disable XIL
    EnableXil: true
    
    # define ego vehicles, which will be simulated in Clients. support: 
    #   1) id of the vehicle (VISSIM id is integer, SUMO id is string). 
    #   for multiple vehicles, give a list, e.g. VISSIM: [1, 2] OR SUMO: ['vehicle_0', 'vehicle_1']
    #   2) use identifier All if need to control all vehicles. e.g., simulate detailed dynamics of all vehicles
    #
    # radius 0 means only the ego vehicle is sent to Xil
    #--------------------------------------------------
    # for sumo-ipg, essentially give any name you want to name the ego, and the interface will create the vehicle in sumo at start of the simulation
    VehicleSubscription: 
    -   type: ego
        attribute: {id: ['egoCm'], radius: [100]} 
        ip: ["160.91.113.184"]
        port: [7331]
    # -   type: ego
        # attribute: {id: ['egoCm'], radius: [0]} 
        # ip: ["127.0.0.1"]
        # port: [2333]
    SignalSubscription:
    # -   type: intersection
        # attribute: {name: ['2117']}
        # ip: ['127.0.0.1']
        # port: [7331]
    -   type: intersection
        attribute: {name: ['J1']}
        ip: ['160.91.113.184']
        port: [2444]    

CarMakerSetup:
    # whether or not enable CarMaker (default: false)
    EnableCosimulation: true
    
    # if true, ego state is sent from Simulink.
    # if false, ego state is sent from User.cpp 
    EnableEgoSimulink: false
    
    # # Ip and Port settings 
    # # if no setting, need to make sure have one and only one vehicle id subscription, which will be used as ip and port
    # # if set, will use whatever set here instead of what is defined in subscription
    CarMakerIP: 160.91.113.184
    
    CarMakerPort: 7331
    
    # # refresh rate, default Traffic Objects updates every 0.001 seconds
    # TrafficRefreshRate: 0.001
    
    # # ego settings
    # # if no setting, need to make sure have one and only one vehicle id subscription, which will be used as ego
    # # if no type, will add the vehicle using sumo default vehicle type
    # # if set, will use whatever set here instead of what is defined in subscription
    # EgoId: egoCm
    
    # EgoType: DEFAULT_PEDTYPE
    
    # transmit real-time traffic signal light information 
    SynchronizeTrafficSignal: true
    
    
